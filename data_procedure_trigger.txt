create table employees
(eid varchar(3) not null, 
ename varchar(15),
 city varchar(15),
 primary key(eid));
      
create table customers
(cid varchar(4) not null,
 cname varchar(15),
 city varchar(15),
 visits_made int(5),
 last_visit_time datetime,
 primary key(cid));

create table suppliers
(sid varchar(2) not null,
sname varchar(15) not null,
city varchar(15),
telephone_no char(10),
 primary key(sid),
 unique(sname));

create table products
(pid varchar(4) not null,
 pname varchar(15) not null,
 qoh int(5) not null,
 qoh_threshold int(5),
 original_price decimal(6,2),
 discnt_rate decimal(3,2),
 sid varchar(2),
 primary key(pid),
 foreign key (sid) references suppliers (sid));

create table purchases
(purid int(5) not null auto_increment,
 cid varchar(4) not null,
 eid varchar(3) not null,
 pid varchar(4) not null,
 qty int(5),
 ptime datetime,
 total_price decimal(7,2),
 primary key (purid),
 foreign key (cid) references customers(cid),
 foreign key (eid) references employees(eid),
 foreign key (pid) references products(pid));

create table logs
(logid int(5) not null auto_increment, 
who varchar(30) not null,
time datetime not null,
table_name varchar(20) not null,
operation varchar(6) not null,
key_value varchar(4),
primary key (logid)); 

insert into employees values ('e00', 'Amy', 'Vestal');
insert into employees values ('e01', 'Bob', 'Binghamton');
insert into employees values ('e02', 'John', 'Binghamton');
insert into employees values ('e03', 'Lisa', 'Binghamton');
insert into employees values ('e04', 'Matt', 'Vestal');

insert into suppliers values ('s0', 'Supplier 1', 'Binghamton', '6075555431');
insert into suppliers values ('s1', 'Supplier 2', 'NYC', '6075555432');

insert into products values ('pr00', 'Milk', 12, 10, 2.40, 0.1, 's0');
insert into products values ('pr01', 'Egg', 20, 10, 1.50, 0.2, 's1');
insert into products values ('pr02', 'Bread', 15, 10, 1.20, 0.1, 's0');
insert into products values ('pr03', 'Pineapple', 6, 5, 2.00, 0.3, 's0');
insert into products values ('pr04', 'Knife', 10, 8, 2.50, 0.2, 's1');
insert into products values ('pr05', 'Shovel', 5, 5, 7.99, 0.1, 's0');

insert into customers values ('c000', 'Kathy', 'Vestal', 2, '2013-11-28 10:25:32'); 
insert into customers values ('c001', 'Brown', 'Binghamton', 1, '2013-12-05 09:12:30'); 
insert into customers values ('c002', 'Anne', 'Vestal', 1, '2013-11-29 14:30:00'); 
insert into customers values ('c003', 'Jack', 'Vestal', 1, '2013-12-04 16:48:02'); 
insert into customers values ('c004', 'Mike', 'Binghamton', 1, '2013-11-30 11:52:16'); 
    
insert into purchases values (1, 'c000', 'e00', 'pr00', 1, '2013-11-26 12:34:22', 2.16);
insert into purchases values (2, 'c001', 'e03', 'pr03', 2, '2013-12-05 09:12:30', 2.80);
insert into purchases values (3, 'c002', 'e03', 'pr00', 1, '2013-11-29 14:30:00', 2.16);
insert into purchases values (4, 'c000', 'e01', 'pr01', 5, '2013-11-28 10:25:32', 6.00);
insert into purchases values (5, 'c004', 'e04', 'pr02', 3, '2013-11-30 11:52:16', 3.24);
insert into purchases values (6, 'c003', 'e02', 'pr05', 1, '2013-12-04 16:48:02', 7.19);


delimiter //
create procedure show_tuples(in tb varchar(30))
begin
	set @sql = concat('select * from ', tb);
	prepare stmt from @sql;
	execute stmt;
	deallocate prepare stmt;
end //
delimiter ;


delimiter //
create procedure report_monthly_sale(in prod_id varchar(30))
begin
	set @sql = concat('select purchases.pid, pname, date_format(ptime, "%Y-%b") month, sum(qty) total_qty, sum(total_price) total_price, sum(total_price)/sum(qty) average_price from purchases left join products on purchases.pid=products.pid where purchases.pid="', prod_id, '" group by month');
	prepare stmt from @sql;
	execute stmt;
	deallocate prepare stmt;
end //
delimiter ;


delimiter //
create procedure add_purchase(in pur_no int(5), in c_id varchar(15), 
in e_id varchar(15), in p_id varchar(15), in pur_qty int)
begin
	set @sql = CONCAT('select original_price*(1-discnt_rate)*', pur_qty, ' into @total_price from products where pid="', p_id, '";');	
	prepare stmt from @sql;
	execute stmt;
	deallocate prepare stmt;
	set @sql = CONCAT('insert into purchases values(', pur_no, ',"', c_id, '","', e_id, '","', p_id, '",', pur_qty, ',"', CURRENT_TIMESTAMP, '",', @total_price, ');');	
	prepare stmt from @sql;
	execute stmt;
	deallocate prepare stmt;
end //
delimiter ;


delimiter //
create trigger insert_purchases_logs_trigger
after insert on purchases for each row
begin
	declare user_ varchar(30);
	select user() into user_;
	insert into logs(who, time, table_name, operation, key_value) values(user_, CURRENT_TIMESTAMP, "purchases", "insert", new.purid);
end //
delimiter ;


delimiter //
create trigger update_products_logs_trigger
after update on products for each row
begin
	declare user_ varchar(30);
	select user() into user_;
	if new.qoh!=old.qoh then	
		insert into logs(who, time, table_name, operation, key_value) values(user_, CURRENT_TIMESTAMP, "products", "update", new.pid);
	end if;
end //
delimiter ;


delimiter //
create trigger update_customers_logs_trigger
after update on customers for each row
begin
	declare user_ varchar(30);
	select user() into user_;
	if new.visits_made!=old.visits_made then
		insert into logs(who, time, table_name, operation, key_value) values(user_, CURRENT_TIMESTAMP, "customers", "update", new.cid);
	end if;
end //
delimiter ;



delimiter //
create trigger before_purchase_trigger
before insert on purchases for each row
begin
	declare msg varchar(200);
	if (select qoh<new.qty from products where pid=new.pid) then 
		set msg = "库存不足！！！";
		SIGNAL SQLSTATE 'HY000' SET MESSAGE_TEXT = msg;
	end if;
end //
delimiter ;




delimiter //
create trigger after_purchase_trigger
after insert on purchases for each row
begin
	update products set qoh=qoh-new.qty where pid=new.pid;
	if (select qoh<qoh_threshold from products where pid=new.pid) then 
		update products set qoh=2*(qoh+new.qty) where pid=new.pid;	
	end if;
	update customers set visits_made=visits_made+1,last_visit_time=CURRENT_TIMESTAMP where cid=new.cid;
end //
delimiter ;

